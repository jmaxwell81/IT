<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_291066_it.TaskTypesManager</api_name>
        <client_callable>true</client_callable>
        <description/>
        <name>TaskTypesManager</name>
        <script><![CDATA[var TaskTypesManager = Class.create();
TaskTypesManager.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {
	
	getTaskTypes: function() {
			try {
			var taskTypeRecords = new GlideRecord("x_291066_it_tasktypes");
		
// 			taskTypeRecords.addQuery('it_asset','a1Zc000000CTzULEA1'); 
 			taskTypeRecords.query();

			var taskTypes = [];

			while (taskTypeRecords.next())
			{
				gs.info(taskTypeRecords.name); 
				taskTypes.push(
					{
						"name": taskTypeRecords.name.toString(),
						"id": taskTypeRecords.id.toString()
					}
				);
			}
			//gs.info("getTaskTypes ---> " + taskTypes[0].name);
			//gs.info("getTaskTypes ---> " + taskTypes[0].id);	
			gs.info("getTaskTypes ---> " + JSON.stringify(taskTypes));
			return JSON.stringify(taskTypes);
			
		} catch(ex){
			gs.error(ex.message);
		}
	},
	
	populateTaskTypeByAccount: function() {
		try { 
			var accountId = this.getParameter("accountId");
			gs.info("loadTaskTypeByAccount --> " + accountId);
			var r = new sn_ws.RESTMessageV2('x_291066_it.GetTaskTypesByAccount', 'Default GET');			
			r.setStringParameterNoEscape('accountid', accountId);
			var response = r.execute();
// 			var responseBody = response.getBody();
// 			var httpStatus = response.getStatusCode();
// 			gs.info(responseBody);
// 			gs.info("loadTaskTypeByAccount -> " + httpStatus);
			if (response.getStatusCode() === 200) {
				var bodyContent = JSON.parse(response.getBody());
				var taskTypes = bodyContent["Related Objects"]["Task Types"];
				for(var index = 0; index < taskTypes.length; index++) {
					//gs.info("loadTaskTypeByAccount --> " + taskTypes[index].Base_Object);
					gr = new GlideRecord("x_291066_it_tasktypes");
					gr.initialize();				
					
					// Saving in ITService table.					
					gr.acknowledgement_enabled = taskTypes[index].Acknowledgement_Enabled;
					gr.approval_enabled = taskTypes[index].Approval_Enabled;
					gr.approval_reminder_in = taskTypes[index].Approval_Reminder_in;
					gr.auto_acknowledge = taskTypes[index].Auto_Acknowledge;
					gr.auto_approve_invoice = taskTypes[index].Auto_Approve_Invoice;
					gr.auto_execute = taskTypes[index].Auto_Execute;
					gr.base_object = taskTypes[index].Base_Object;					
					gr.can_create_child_requests_in_portal = taskTypes[index].Can_Create_Child_Requests_in_Portal;
					gr.can_have_child_requests = taskTypes[index].Can_Have_Child_Requests;
					gr.category = taskTypes[index].Category;
					gr.channel = taskTypes[index].Channel;
					gr.contract_task_type = taskTypes[index].Contract_Task_Type;
					gr.create_work_order = taskTypes[index].Create_Work_Order;
					gr.createdbyid = taskTypes[index].CreatedById;
					gr.createddate = taskTypes[index].CreatedDate;
					gr.custom_form = taskTypes[index].Custom_Form;
					gr.disable_automatic_offer_creation = taskTypes[index].Disable_Automatic_Offer_Creation;
					gr.dispatch_reminder = taskTypes[index].Dispatch_Reminder;
					gr.editable_by_pm = taskTypes[index].Editable_by_PM;
					gr.enable_bundling = taskTypes[index].Enable_Bundling;
					gr.enable_over_estimated_time_emails = taskTypes[index].Enable_Over_Estimated_Time_Emails;
					gr.id = taskTypes[index].Id;
					gr.is_deprecated = taskTypes[index].Is_Deprecated;
					gr.is_project_container = taskTypes[index].Is_Project_Container;
					gr.is_for_project_management_use = taskTypes[index].Is_for_Project_Management_Use;
					gr.job_completion_form = taskTypes[index].Job_Completion_Form;
					gr.lastmodifiedbyid = taskTypes[index].LastModifiedById;
					gr.lastmodifieddate = taskTypes[index].LastModifiedDate;
					gr.name = taskTypes[index].Name;
					gr.ownerid = taskTypes[index].OwnerId;
					gr.sreq_owner_as_pm = taskTypes[index].SREQ_Owner_As_PM;
					gr.send_csat_to_client_ticket_owner = taskTypes[index].Send_CSAT_to_Client_Ticket_Owner;
					gr.send_csat_to_submitter = taskTypes[index].Send_CSAT_to_Submitter;
					gr.service_domain = taskTypes[index].Service_Domain;
					gr.short_description = taskTypes[index].Short_Description;
					gr.show_in_default_service_catalog = taskTypes[index].Show_in_Default_Service_Catalog;
					gr.systemmodstamp = taskTypes[index].SystemModstamp;
					gr.valid_for_service_request = taskTypes[index].Valid_for_Service_Request;
					gr.valid_for_work_order = taskTypes[index].Valid_for_Work_Order;
					gr.wo_late_emails_enabled = taskTypes[index].WO_Late_Emails_Enabled;
					gr.wo_upcoming_emails_enabled = taskTypes[index].WO_Upcoming_Emails_Enabled;
					
					// Created on Site hands due to we are using the third endpoint for gettinhg the task types records
					gr.createdon = "Site Hands";
					gr.insert();
				}
			}		
			
		}
		catch(ex) {
			gs.error(ex.message);
		}
	},
	
    type: 'TaskTypesManager'
});
]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2018-11-22 23:26:33</sys_created_on>
        <sys_id>fd4736374f71a700cd558c318110c797</sys_id>
        <sys_mod_count>14</sys_mod_count>
        <sys_name>TaskTypesManager</sys_name>
        <sys_package display_value="IT" source="x_291066_it">ad98ba3a4f3de300cd558c318110c7ec</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="IT">ad98ba3a4f3de300cd558c318110c7ec</sys_scope>
        <sys_update_name>sys_script_include_fd4736374f71a700cd558c318110c797</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2018-11-23 19:12:49</sys_updated_on>
    </sys_script_include>
</record_update>
